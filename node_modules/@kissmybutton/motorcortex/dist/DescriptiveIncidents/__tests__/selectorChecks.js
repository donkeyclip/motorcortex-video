"use strict";

var DI = require('../DescriptiveIncident');

var DG = require('../DescriptiveGroup');

var DC = require('../DescriptiveClip');

test("When a null selector Incident, or a realative selector Incident that does not\n    inherit selectors from its parent enters a Clip the addition should be rejected", function () {
  document.body.innerHTML = "<div id=\"my-root-clip\"></div>";
  var host = document.getElementById('my-root-clip');
  var DC0 = new DC({
    html: "<div>\n            <div class=\"clip-container\" data-motorcortex2-id=\"myRootClip-1\"></div>\n            <div class=\"clip-container\" data-motorcortex2-id=\"myRootClip-2\"></div>\n        </div>",
    css: "",
    host: host,
    id: 'DC0'
  });
  var nullSelectorIncident = new DI({
    animatedAttrs: {
      alpha: 2
    }
  }, {
    duration: 1000,
    id: 'desc-inc--1'
  });
  var relativeSelectorIncident = new DI({
    animatedAttrs: {
      beta: 2
    }
  }, {
    selector: '&.my-class',
    duration: 3000,
    id: 'desc-inc-0'
  });
  var noSelectorGroup = new DG({
    id: 'no-selector-group'
  });
  noSelectorGroup.addIncident(nullSelectorIncident, 0);
  noSelectorGroup.addIncident(relativeSelectorIncident, 3000);
  var res = DC0.addIncident(noSelectorGroup);
  expect(res.errors.length).toBe(2);
  expect(res.result).toBe(false);
  expect(res.errors[0]).toEqual({
    id: 'desc-inc--1',
    ClassName: 'Incident',
    plugin_npm_name: 'motor-cortex-js-attribute',
    error: 'null selector'
  });
  expect(res.errors[1]).toEqual({
    id: 'desc-inc-0',
    ClassName: 'Incident',
    plugin_npm_name: 'motor-cortex-js-attribute',
    error: 'relative selector with no inherited selector',
    selector: '&.my-class'
  });
});
test("When a null selector Incident, or a realative selector Incident directly enters\n    the timeline of a Clip the addition should be rejected", function () {
  document.body.innerHTML = "<div id=\"my-root-clip\"></div>";
  var host = document.getElementById('my-root-clip');
  var DC0 = new DC({
    html: "<div>\n            <div class=\"clip-container\" data-motorcortex2-id=\"myRootClip-1\"></div>\n            <div class=\"clip-container\" data-motorcortex2-id=\"myRootClip-2\"></div>\n        </div>",
    css: "",
    host: host,
    id: 'DC0'
  });
  var nullSelectorIncident = new DI({
    animatedAttrs: {
      alpha: 2
    }
  }, {
    duration: 1000,
    id: 'desc-inc--1'
  });
  var relativeSelectorIncident = new DI({
    animatedAttrs: {
      beta: 2
    }
  }, {
    selector: '&.my-class',
    duration: 3000,
    id: 'desc-inc-0'
  });
  var res1 = DC0.addIncident(nullSelectorIncident, 0);
  var res2 = DC0.addIncident(relativeSelectorIncident, 3000);
  expect(res1.result).toBe(false);
  expect(res2.result).toBe(false);
  expect(res1.errors[0]).toEqual({
    id: 'desc-inc--1',
    ClassName: 'Incident',
    plugin_npm_name: 'motor-cortex-js-attribute',
    error: 'null selector'
  });
  expect(res2.errors[0]).toEqual({
    id: 'desc-inc-0',
    ClassName: 'Incident',
    plugin_npm_name: 'motor-cortex-js-attribute',
    error: 'relative selector with no inherited selector',
    selector: '&.my-class'
  });
});