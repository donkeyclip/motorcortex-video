"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var NullClip =
/*#__PURE__*/
function () {
  function NullClip() {
    _classCallCheck(this, NullClip);
  }

  _createClass(NullClip, [{
    key: "addIncident",
    value: function addIncident() {
      return {
        result: true,
        execute: function execute() {}
      };
    }
  }, {
    key: "moveIncident",
    value: function moveIncident() {
      return {
        result: true,
        execute: function execute() {}
      };
    }
  }, {
    key: "removeIncident",
    value: function removeIncident() {
      return {
        result: true,
        execute: function execute() {}
      };
    }
  }, {
    key: "resizeIncident",
    value: function resizeIncident() {
      return {
        result: true,
        execute: function execute() {}
      };
    }
  }, {
    key: "getIncidentsByChannel",
    value: function getIncidentsByChannel() {
      return {};
    }
  }, {
    key: "flash",
    value: function flash() {}
  }, {
    key: "_resize",
    value: function _resize() {}
  }, {
    key: "onProgress",
    value: function onProgress() {}
  }, {
    key: "duration",
    get: function get() {
      return 0;
    }
  }]);

  return NullClip;
}();

module.exports = NullClip;