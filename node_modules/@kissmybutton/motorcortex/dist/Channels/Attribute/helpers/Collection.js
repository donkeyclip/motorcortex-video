"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Collection =
/*#__PURE__*/
function () {
  function Collection() {
    var initialArray = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

    _classCallCheck(this, Collection);

    this.realArray = [];

    if (initialArray != null) {
      this.realArray = initialArray;
    }
  }

  _createClass(Collection, [{
    key: "_hasOwnProperty",
    value: function _hasOwnProperty(key) {
      return Object.prototype.hasOwnProperty.call(this.realArray, key);
    }
  }, {
    key: "_get",
    value: function _get(key) {
      return this.realArray[key];
    }
  }, {
    key: "_set",
    value: function _set(key, value) {
      this.realArray[key] = value;
    }
  }, {
    key: "_keys",
    value: function _keys() {
      return Object.keys(this.realArray);
    }
  }, {
    key: "_delete",
    value: function _delete(key) {
      return delete this.realArray[key];
    }
    /**
     * exports a Collection object
     */

  }, {
    key: "_export",
    value: function _export() {
      return this.realArray;
    }
  }]);

  return Collection;
}();

module.exports = Collection;