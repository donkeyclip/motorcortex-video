import MonoIncident from '../../BaseClasses/MonoIncident';

/**
 * Effect class takes on constructor:
 * attrs:
 *  - animatedAttrs: valid animated attributes are "gain", "pan"
 *  -
 * */
class Effect extends MonoIncident {
  onProgress(fraction) {
    // eslint-disable-line no-unused-vars
    if (!this.element.soundLoaded) {
      this.setBlock('loading sound');
      this.element.pubSub.sub(this.id, () => {
        this.unblock();
      });
      return false;
    }

    if (this.attributeKey === 'gain') {
      const gain = (this.targetValue - this.getInitialValue()) * fraction + this.getInitialValue();
      // console.log(this.props.nodes.stereoPan.pan.value);
      this.element.effectsAudioNode.gainNode.gain.value = gain;
    } else if (this.attributeKey === 'pan') {
      const pan = (this.targetValue - this.getInitialValue()) * fraction + this.getInitialValue();
      // console.log(this.props.nodes.stereoPan.pan.value);
      this.element.effectsAudioNode.pannerNode.pan.value = pan;
    }
  }

  getScratchValue() {
    if (this.attributeKey === 'pan') {
      if (Object.prototype.hasOwnProperty.call(this.element.startValues, 'pan')) {
        return this.element.startValues.pan;
      }

      return 0;
    }
    if (this.attributeKey === 'gain') {
      if (Object.prototype.hasOwnProperty.call(this.element.startValues, 'gain')) {
        return this.element.startValues.gain;
      }

      return 1;
    }
  }
}

export default Effect;
