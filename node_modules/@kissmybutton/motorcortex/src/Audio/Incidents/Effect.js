const MonoIncident = require('../../BaseClasses/MonoIncident');

/**
 * Effect class takes on constructor:
 * attrs:
 *  - animatedAttrs: valid animated attributes are "gain", "pan"
 *  -
 **/
class Effect extends MonoIncident {
    onProgress(fraction, ms) {
        if (this.element.soundLoaded === false) {
            this.setBlock('loading sound');
            this.element.pubSub.sub(this.id, () => {
                this.unblock();
            });
            return false;
        }

        if (this.attributeKey === "gain") {
            const gain = (this.targetValue - this.getInitialValue()) * fraction + this.getInitialValue();
            // console.log(this.props.nodes.stereoPan.pan.value);
            this.element.effectsAudioNode.gainNode.gain.value = gain;
        }
        else if (this.attributeKey === "pan") {
            const pan = (this.targetValue - this.getInitialValue()) * fraction + this.getInitialValue();
            // console.log(this.props.nodes.stereoPan.pan.value);
            this.element.effectsAudioNode.pannerNode.pan.value = pan;
        }
    }

    getScratchValue() {
        if (this.attributeKey === "pan") {
            if (this.element.startValues.hasOwnProperty('pan')) {
                return this.element.startValues.pan;
            }
            else {
                return 0;
            }
        }
        else if (this.attributeKey === "gain") {
            if (this.element.startValues.hasOwnProperty('gain')) {
                return this.element.startValues.gain;
            }
            else {
                return 1;
            }
        }
    }
}

module.exports = Effect;
