import MediaPlayIncident from '../../BaseClasses/MediaPlayIncident';
import { audioContext } from '../../_coreUtils/Helper';

/**
 * expects on its props:
 * - selector
 * - duration
 * - startFrom (optional)
 * */
class AudioPlayback extends MediaPlayIncident {
  play(millisecond) {
    if (!this.element.soundLoaded) {
      this.setBlock('loading sound');
      this.element.pubSub.sub(this.id, () => {
        this.unblock();
      });
      return false;
    }
    let startFrom = 0;
    if (Object.prototype.hasOwnProperty.call(this.props, 'startFrom')) {
      startFrom = this.props.startFrom;
    }

    this.audioNode = audioContext.createBufferSource();
    this.audioNode.buffer = this.element.buffer;
    this.audioNode.connect(this.element.effectsAudioNode.input);

    this.audioNode.start(0, (millisecond + startFrom) / 1000);
    return true;
  }

  stop() {
    this.audioNode.stop();
  }
}

export default AudioPlayback;
