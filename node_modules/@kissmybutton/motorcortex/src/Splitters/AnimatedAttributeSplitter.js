const Group = require('../BaseClasses/Group');
const ContextAwareIncident = require('./ContextAwareIncident');

class AnimatedAttributesSplitter extends Group {
    constructor(descriptiveIncident, contextData, mcid, selector) {
        super({}, { id: `${descriptiveIncident.id}_${mcid}` });
        this.mcid = mcid;
        this.selector = selector;
        this.setUp(descriptiveIncident, contextData);
    }


    setUp(descriptiveIncident, contextData) {
        for (let attr in descriptiveIncident.attrs.animatedAttrs) {
            const singleAnimatedAttrs = {};
            singleAnimatedAttrs[attr] = descriptiveIncident.attrs.animatedAttrs[attr];
            const attrsToPass = { ...descriptiveIncident.attrs, animatedAttrs: singleAnimatedAttrs };
            const propsToPass = { ...descriptiveIncident.props, selector: this.selector };
            const constructionIngredients = {
                incidentId: descriptiveIncident.id,
                attrs: attrsToPass,
                props: propsToPass,
                Incident: descriptiveIncident.constructor.Incident,
                plugin_npm_name: descriptiveIncident.constructor.plugin_npm_name,
                Channel: descriptiveIncident.constructor.Channel,
                DescriptiveIncident: descriptiveIncident
            };
            const contextAwareIncident = new ContextAwareIncident(constructionIngredients, contextData, this.mcid, attr);
            this.addChild(contextAwareIncident, 0);
        }
    }


}

module.exports = AnimatedAttributesSplitter;
